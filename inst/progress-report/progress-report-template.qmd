::: callout-note
Please remove content in `[]` brackets and replace with your project-specific information.
:::

# Project Overview

## Package Name and Purpose

\[Provide the name of your R package and a brief (2-3 sentences) description of its purpose and main functionality.\]

`irwpkg` is an R package extending the functionality of the existing [Item Response Warehouse (IRW)](https://datapages.github.io/irw/) package hosted [here](https://github.com/ben-domingue/irw). This project enhances the package’s versatility and usability, adding functions for efficient querying and processing of large-scale item response data directly in R, thereby streamlining workflows for researchers and analysts working with IRW datasets.

# Progress Summary

## Completed Work

### Student 1 Name (SUNetID 1)

-   \[List major tasks completed\]
-   \[Include specific functions/features implemented\]
-   \[Note any documentation written\]
-   \[Mention tests developed\]

### Hansol Lee (hansol)

-   redesigned code architecture

-   implemented functions related to accessing and querying the IRW database stored in Redivis

    -   `list_available_datasets()`

    -   `get_database_metadata()` and `get_table_metadata()`

    -   `filter_tables()`

    -   `fetch_data()` and `fetch_table()`

    -   `download_data()`

-   wrote README to include guide for authentication with Redivis, package installation and usage examples

-   added unit tests for `list_available_datasets()`

## Remaining Work

### Student 1 Name (SUNetID 1)

-   \[List tasks still to be completed\]
-   \[Include estimated completion dates\]
-   \[Note any dependencies on other team members' work\]

### Hansol Lee (hansol)

-   Week 9 (Nov 18 - 24)
    -   extend `filter_table()` to include more criteria
        -   pre-compute metadata table for querying IRW database
            -   implement version control for different versions of IRW
    -   add error handling for Redivis API communication
-   Thanksgiving Week (Nov 25 - Dev 1)
    -   add unit tests
-   Week 10 (Dec 2 - 8)
    -   create vignettes for demos
    -   finish unit testing & final R CMD checks

# Issues and Solutions

## Technical Challenges

\[Describe any technical challenges encountered during development\]

### Issue 1

-   **Problem**: \[Brief description of the issue\]
-   **Solution**: \[How the issue was resolved or plan for resolution\]
-   **Impact**: \[Effect on project timeline or scope\]

### Issue 2

-   problem: designing init functions –\> defining global variables

-   solution:

-   impact:

### Issue 3

-   problem: metadata compute is too slow

-   solution:

-   impact:

## Collaboration Challenges

\[Describe any team coordination or communication challenges\]

-   **Challenge**: dealing with git merge conflict disaster with the upstream continuously being updated with stuff unrelated to package development and us being git newbies :(
-   **Resolution**:
    -   define a clear collaboration workflow upfront
    -   create a dedicated, clean repository for R package development (`irwpkg)`. Retain the original irw repo solely for preprocessing raw datasets for Redivis export.
-   **Preventive Measures**:
    -   to prevent merge conflicts,
        -   keep the main branch clean, work on feature branches for individual tasks and merge into the main branch only after a collaborative code review.

        -   assign distinct functionalities to each team member to prevent editing the same files

# Changes to Project Plan

## Scope Modifications

\[List any changes to the original project scope\]

### Original Plan

\[Description\]

### Modified Plan

\[Description\]

### Reason for Change

\[Explanation\]

### Impact on Timeline

\[Effect on project schedule\]

## Timeline Adjustments

\[Document any changes to project milestones or deadlines\]

### Updated Timeline

-   \[Milestone 1\]: \[New Date\]
-   \[Milestone 2\]: \[New Date\]
-   \[Final Delivery\]: \[New Date\]

# Additional Notes

\[Any other relevant information, concerns, or suggestions for improvement\]
